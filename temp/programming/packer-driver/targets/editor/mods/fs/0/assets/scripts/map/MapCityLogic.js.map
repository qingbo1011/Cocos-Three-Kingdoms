{"version":3,"sources":["file:///D:/git/github/mszlu/games/slg/ms-sg/assets/scripts/map/MapCityLogic.ts"],"names":["_decorator","Vec2","Vec3","MapBaseLayerLogic","CityLogic","MapUtil","EventMgr","ccclass","property","MapCityLogic","onLoad","on","onUpdateCitys","onUpdateCity","onDestroy","targetOff","areaIndex","addIds","removeIds","updateIds","_itemMap","has","i","length","addItem","_cmd","cityProxy","getCity","removeItem","updateItem","city","getAreaIdByCellPoint","x","y","setItemData","item","data","cityData","position","mapCellToPixelPoint","setPosition","getComponent","setCityData","getIdByData","cityId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAkBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;AAG1BC,MAAAA,iB;;AACAC,MAAAA,S;;AACAC,MAAAA,O;;AAEEC,MAAAA,Q,iBAAAA,Q;;;;;;;OANH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;yBAUTS,Y,WAFpBF,OAAO,CAAC,cAAD,C,gBAAR,MAEqBE,YAFrB;AAAA;AAAA,kDAE4D;AAE9CC,QAAAA,MAAM,GAAS;AACrB,gBAAMA,MAAN;AACA;AAAA;AAAA,oCAASC,EAAT,CAAY,cAAZ,EAA4B,KAAKC,aAAjC,EAAgD,IAAhD;AACA;AAAA;AAAA,oCAASD,EAAT,CAAY,aAAZ,EAA2B,KAAKE,YAAhC,EAA8C,IAA9C;AACH;;AAESC,QAAAA,SAAS,GAAS;AACxB;AAAA;AAAA,oCAASC,SAAT,CAAmB,IAAnB;AACA,gBAAMD,SAAN;AACH;;AAESF,QAAAA,aAAa,CAACI,SAAD,EAAoBC,MAApB,EAAsCC,SAAtC,EAA2DC,SAA3D,EAAsF;AACzG;AACA,cAAI,KAAKC,QAAL,CAAcC,GAAd,CAAkBL,SAAlB,CAAJ,EAAkC;AAC9B,iBAAK,IAAIM,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGL,MAAM,CAACM,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,mBAAKE,OAAL,CAAaR,SAAb,EAAwB,KAAKS,IAAL,CAAUC,SAAV,CAAoBC,OAApB,CAA4BV,MAAM,CAACK,CAAD,CAAlC,CAAxB;AACH;;AACD,iBAAK,IAAIA,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGJ,SAAS,CAACK,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,mBAAKM,UAAL,CAAgBZ,SAAhB,EAA2BE,SAAS,CAACI,CAAD,CAApC;AACH;;AACD,iBAAK,IAAIA,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGH,SAAS,CAACI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,mBAAKO,UAAL,CAAgBb,SAAhB,EAA2B,KAAKS,IAAL,CAAUC,SAAV,CAAoBC,OAApB,CAA4BR,SAAS,CAACG,CAAD,CAArC,CAA3B;AACH;AACJ;AACJ;;AAEST,QAAAA,YAAY,CAACiB,IAAD,EAAwB;AAC1C,cAAId,SAAgB,GAAG;AAAA;AAAA,kCAAQe,oBAAR,CAA6BD,IAAI,CAACE,CAAlC,EAAqCF,IAAI,CAACG,CAA1C,CAAvB;;AACA,cAAI,KAAKb,QAAL,CAAcC,GAAd,CAAkBL,SAAlB,CAAJ,EAAkC;AAC9B,iBAAKQ,OAAL,CAAaR,SAAb,EAAwBc,IAAxB;AACH;AACJ;;AAEMI,QAAAA,WAAW,CAACC,IAAD,EAAaC,IAAb,EAA8B;AAC5C,cAAIC,QAAqB,GAAGD,IAA5B;AACA,cAAIE,QAAc,GAAG;AAAA;AAAA,kCAAQC,mBAAR,CAA4B,IAAItC,IAAJ,CAASoC,QAAQ,CAACL,CAAlB,EAAqBK,QAAQ,CAACJ,CAA9B,CAA5B,CAArB;AACAE,UAAAA,IAAI,CAACK,WAAL,CAAiB,IAAItC,IAAJ,CAASoC,QAAQ,CAACN,CAAlB,EAAqBM,QAAQ,CAACL,CAA9B,EAAiC,CAAjC,CAAjB;AACAE,UAAAA,IAAI,CAACM,YAAL;AAAA;AAAA,sCAA6BC,WAA7B,CAAyCL,QAAzC;AACH;;AAEMM,QAAAA,WAAW,CAACP,IAAD,EAAoB;AAClC,iBAAQA,IAAD,CAAsBQ,MAA7B;AACH;;AA5CuD,O","sourcesContent":["import { _decorator, Node, Vec2, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport MapBaseLayerLogic from \"./MapBaseLayerLogic\";\nimport CityLogic from \"./entries/CityLogic\";\nimport MapUtil from \"./MapUtil\";\nimport { MapCityData } from \"./MapCityProxy\";\nimport { EventMgr } from '../utils/EventMgr';\n\n@ccclass('MapCityLogic')\n\nexport default class MapCityLogic extends MapBaseLayerLogic {\n\n    protected onLoad(): void {\n        super.onLoad();\n        EventMgr.on(\"update_citys\", this.onUpdateCitys, this);\n        EventMgr.on(\"update_city\", this.onUpdateCity, this);\n    }\n\n    protected onDestroy(): void {\n        EventMgr.targetOff(this);\n        super.onDestroy();\n    }\n\n    protected onUpdateCitys(areaIndex: number, addIds: number[], removeIds: number[], updateIds: number[]): void {\n        // console.log(\"update_citys\", arguments);\n        if (this._itemMap.has(areaIndex)) {\n            for (let i: number = 0; i < addIds.length; i++) {\n                this.addItem(areaIndex, this._cmd.cityProxy.getCity(addIds[i]));\n            }\n            for (let i: number = 0; i < removeIds.length; i++) {\n                this.removeItem(areaIndex, removeIds[i]);\n            }\n            for (let i: number = 0; i < updateIds.length; i++) {\n                this.updateItem(areaIndex, this._cmd.cityProxy.getCity(updateIds[i]));\n            }\n        }\n    }\n\n    protected onUpdateCity(city:MapCityData):void {\n        let areaIndex:number = MapUtil.getAreaIdByCellPoint(city.x, city.y);\n        if (this._itemMap.has(areaIndex)) {\n            this.addItem(areaIndex, city);\n        }\n    }\n\n    public setItemData(item: Node, data: any): void {\n        let cityData: MapCityData = data as MapCityData;\n        let position: Vec2 = MapUtil.mapCellToPixelPoint(new Vec2(cityData.x, cityData.y));\n        item.setPosition(new Vec3(position.x, position.y, 0));\n        item.getComponent(CityLogic).setCityData(cityData);\n    }\n\n    public getIdByData(data: any): number {\n        return (data as MapCityData).cityId;\n    }\n}\n"]}