{"version":3,"sources":["file:///D:/git/github/mszlu/games/slg/ms-sg/assets/scripts/union/UnionCommand.ts"],"names":["UnionCommand","NetManager","UnionProxy","ServerConfig","MapCommand","EventMgr","getInstance","_instance","destory","onDestory","constructor","on","union_create","onUnionCreate","union_join","onUnionJoin","union_list","onUnionList","union_member","onUnionMember","union_dismiss","onUnionDisMiss","union_applyList","onUnionApply","union_verify","onUnionVerify","union_exit","union_kick","onUnionKick","union_appoint","onUnionAppoint","union_abdicate","onUnionAbdicate","union_modNotice","onUnionNotice","union_info","onUnionInfo","union_log","onUnionLog","union_apply_push","onUnionApplyPush","targetOff","clearData","_proxy","proxy","data","otherData","console","log","code","emit","unionList","updateUnionList","msg","list","updateMemberList","id","Members","updateApplyList","applys","updateNotice","text","l","push","info","logs","city","cityProxy","getMyMainCity","unionData","getUnion","unionId","isMajor","rid","updateApply","unionCreate","name","sendData","send","unionJoin","unionInfo","unionMember","unionApplyList","unionDismiss","unionVerify","decide","unionExit","unionKick","unionAppoint","title","unionAbdicate","modNotice","appoint","unionLog"],"mappings":"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","sourcesContent":["import { _decorator } from 'cc';\nimport { NetManager } from \"../network/socket/NetManager\";\nimport UnionProxy, { Union } from \"./UnionProxy\";\nimport { ServerConfig } from \"../config/ServerConfig\";\nimport { MapCityData } from \"../map/MapCityProxy\";\nimport MapCommand from \"../map/MapCommand\";\nimport { EventMgr } from '../utils/EventMgr';\n\nexport default class UnionCommand {\n    //单例\n    protected static _instance: UnionCommand;\n    public static getInstance(): UnionCommand {\n        if (this._instance == null) {\n            this._instance = new UnionCommand();\n        }\n        return this._instance;\n    }\n\n\n    //数据model\n    protected _proxy: UnionProxy = new UnionProxy();\n\n    public static destory(): boolean {\n        if (this._instance) {\n            this._instance.onDestory();\n            this._instance = null;\n            return true;\n        }\n        return false;\n    }\n\n    //数据model\n\n    constructor() {\n        EventMgr.on(ServerConfig.union_create, this.onUnionCreate, this);\n        EventMgr.on(ServerConfig.union_join, this.onUnionJoin, this);\n        EventMgr.on(ServerConfig.union_list, this.onUnionList, this);\n        EventMgr.on(ServerConfig.union_member, this.onUnionMember, this);\n        EventMgr.on(ServerConfig.union_dismiss, this.onUnionDisMiss, this);\n        EventMgr.on(ServerConfig.union_applyList, this.onUnionApply, this);\n        EventMgr.on(ServerConfig.union_verify, this.onUnionVerify, this);\n        EventMgr.on(ServerConfig.union_exit, this.onUnionDisMiss, this);\n        EventMgr.on(ServerConfig.union_kick, this.onUnionKick, this);\n        EventMgr.on(ServerConfig.union_appoint, this.onUnionAppoint, this);\n        EventMgr.on(ServerConfig.union_abdicate, this.onUnionAbdicate, this);\n        EventMgr.on(ServerConfig.union_modNotice, this.onUnionNotice, this)\n        EventMgr.on(ServerConfig.union_info, this.onUnionInfo, this);\n        EventMgr.on(ServerConfig.union_log, this.onUnionLog, this);\n        EventMgr.on(ServerConfig.union_apply_push, this.onUnionApplyPush, this);\n    }\n\n    public onDestory(): void {\n        EventMgr.targetOff(this);\n    }\n\n    public clearData(): void {\n        this._proxy.clearData();\n    }\n\n    public get proxy(): UnionProxy {\n        return this._proxy;\n    }\n\n\n    protected onUnionCreate(data: any, otherData: any): void {\n        console.log(\"onUnionCreate\", data);\n        if (data.code == 0) {\n            EventMgr.emit(\"create_union_success\");\n            this.unionList();\n        }\n    }\n\n\n    protected onUnionJoin(data: any, otherData: any): void {\n        console.log(\"onUnionJoin\", data);\n        if (data.code == 0) {\n        }\n    }\n\n\n    protected onUnionList(data: any, otherData: any): void {\n        console.log(\"onUnionList\", data);\n        if (data.code == 0) {\n            this._proxy.updateUnionList(data.msg.list);\n            EventMgr.emit(\"update_union_list\",data.msg.list);\n        }\n\n    }\n\n\n    protected onUnionMember(data: any, otherData: any): void {\n        console.log(\"onUnionMember\", data);\n        if (data.code == 0) {\n            this._proxy.updateMemberList(data.msg.id,data.msg.Members);\n            EventMgr.emit(\"update_union_member\",data.msg.Members);\n        }\n        \n    }\n\n\n    protected onUnionDisMiss(data: any, otherData: any): void {\n        console.log(\"onUnionDisMiss\", data);\n        if (data.code == 0) {\n            this.unionList();\n            EventMgr.emit(\"dismiss_union_success\");\n        }\n    }\n\n\n    protected onUnionApply(data: any, otherData: any): void {\n        console.log(\"onUnionApply\", data);\n        if (data.code == 0) {\n            this._proxy.updateApplyList(data.msg.id, data.msg.applys);\n            EventMgr.emit(\"update_union_apply\", data.msg.applys);\n        }\n    }\n\n\n    protected onUnionVerify(data: any, otherData: any): void {\n        console.log(\"onUnionVerify\", data);\n        if (data.code == 0) {\n            EventMgr.emit(\"kick_union_success\");\n            EventMgr.emit(\"verify_union_success\");\n        }\n    }\n\n\n    protected onUnionKick(data: any, otherData: any): void {\n        console.log(\"onUnionKick\", data);\n        if (data.code == 0) {\n            EventMgr.emit(\"kick_union_success\");\n        }\n    }\n\n    protected onUnionAppoint(data: any, otherData: any): void {\n        console.log(\"onUnionAppoint\", data);\n        if (data.code == 0) {\n            EventMgr.emit(\"union_appoint\", data.msg);\n        }\n    }\n\n    protected onUnionAbdicate(data: any, otherData: any): void {\n        console.log(\"onUnionAbdicate\", data);\n        if (data.code == 0) {\n            EventMgr.emit(\"union_abdicate\", data.msg);\n        }\n    }\n\n\n    protected onUnionNotice(data: any, otherData: any): void {\n        console.log(\"onUnionNotice\", data);\n        if(data.code == 0){\n            this._proxy.updateNotice(data.msg.id, data.msg.text)\n            EventMgr.emit(\"union_notice\", data.msg);\n        }\n        \n    }\n\n    protected onUnionInfo(data: any, otherData: any): void {\n        console.log(\"onUnionInfo\", data);\n        if(data.code == 0){\n            let l = []\n            l.push(data.msg.info)\n            this._proxy.updateUnionList(l);\n\n            EventMgr.emit(\"union_info\", data.msg);\n        }\n    }\n\n    protected onUnionLog(data: any, otherData: any): void {\n        console.log(\"onUnionLog\", data);\n        if(data.code == 0){\n            EventMgr.emit(\"union_log\", data.msg.logs);\n        }\n    }\n    \n    protected onUnionApplyPush(data: any, otherData: any): void {\n        console.log(\"onUnionApplyPush\", data);\n        let city:MapCityData = MapCommand.getInstance().cityProxy.getMyMainCity();\n        let unionData:Union = UnionCommand.getInstance().proxy.getUnion(city.unionId);\n        if (unionData && unionData.isMajor(city.rid)){\n            this._proxy.updateApply(city.unionId, data.msg);\n            EventMgr.emit(\"update_union_apply\", data.msg);\n        }\n    }\n\n\n    public unionCreate(name:string):void{\n        let sendData: any = {\n            name: ServerConfig.union_create,\n            msg: {\n                name: name,\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n    public unionJoin(id:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_join,\n            msg: {\n                id: id,\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n    public unionList():void{\n        let sendData: any = {\n            name: ServerConfig.union_list,\n            msg: {\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n    public unionInfo(id:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_info,\n            msg: {\n                id:id\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n    public unionMember(id:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_member,\n            msg: {\n                id: id,\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n    public unionApplyList(id:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_applyList,\n            msg: {\n                id: id,\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n\n    public unionDismiss():void{\n        let sendData: any = {\n            name: ServerConfig.union_dismiss,\n            msg: {\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n    public unionVerify(id:number = 0,decide:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_verify,\n            msg: {\n                id:id,\n                decide:decide\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n    \n    public unionExit():void{\n        let sendData: any = {\n            name: ServerConfig.union_exit,\n            msg: {\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n\n    public unionKick(rid:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_kick,\n            msg: {\n                rid:rid,\n            }\n        };\n        console.log(\"unionKick\");\n        NetManager.getInstance().send(sendData);\n    }\n\n    public unionAppoint(rid:number = 0, title=1):void{\n        let sendData: any = {\n            name: ServerConfig.union_appoint,\n            msg: {\n                rid:rid,\n                title:title\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n    public unionAbdicate(rid:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_abdicate,\n            msg: {\n                rid:rid\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n    public modNotice(text:string):void{\n        let sendData: any = {\n            name: ServerConfig.union_modNotice,\n            msg: {\n                text:text,\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n    public appoint(rid:number = 0):void{\n        let sendData: any = {\n            name: ServerConfig.union_kick,\n            msg: {\n                rid:rid,\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n\n    public unionLog():void{\n        let sendData: any = {\n            name: ServerConfig.union_log,\n            msg: {\n            }\n        };\n        NetManager.getInstance().send(sendData);\n    }\n}\n"]}