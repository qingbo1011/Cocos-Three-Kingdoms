{"version":3,"sources":["file:///D:/git/github/mszlu/games/slg/ms-sg/assets/scripts/login/LoginCommand.ts"],"names":["LoginCommand","HttpConfig","ServerConfig","HttpManager","NetManager","Tools","LoginProxy","NetEvent","MapCommand","LocalCache","DateUtil","EventMgr","Md5","getInstance","_instance","destory","onDestory","constructor","on","ServerCheckLogin","onServerConneted","register","name","onRegister","account_login","onAccountLogin","role_enterServer","onEnterServer","account_reLogin","onAccountRelogin","role_create","onRoleCreate","account_logout","onAccountLogout","account_robLogin","onAccountRobLogin","chat_login","onChatLogin","targetOff","console","log","emit","data","otherData","code","accountLogin","username","password","setLoginValidation","_proxy","saveLoginData","msg","getSession","isLoadMap","setServerTime","time","saveEnterData","enterMap","ServerHandShake","loginData","getLoginData","roleData","getRoleData","session","clear","proxy","pwd","encrypt","params","getUUID","doGet","url","api_name","send_data","hardware","send","uid","nickName","sex","sid","headId","chatLogin","rid","token","nick_name"],"mappings":"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","sourcesContent":["import { HttpConfig } from \"../config/HttpConfig\";\nimport { ServerConfig } from \"../config/ServerConfig\";\nimport { HttpManager } from \"../network/http/HttpManager\";\nimport { NetManager } from \"../network/socket/NetManager\";\nimport { Tools } from \"../utils/Tools\";\nimport LoginProxy from \"./LoginProxy\";\nimport { NetEvent } from \"../network/socket/NetInterface\";\nimport MapCommand from \"../map/MapCommand\";\nimport { LocalCache } from \"../utils/LocalCache\";\nimport DateUtil from \"../utils/DateUtil\";\nimport { EventMgr } from \"../utils/EventMgr\";\nimport { Md5 } from \"../libs/crypto/md5\";\n\nexport default class LoginCommand {\n    //单例\n    protected static _instance: LoginCommand;\n    public static getInstance(): LoginCommand {\n        if (this._instance == null) {\n            this._instance = new LoginCommand();\n        }\n        return this._instance;\n    }\n\n    public static destory(): boolean {\n        if (this._instance) {\n            this._instance.onDestory();\n            this._instance = null;\n            return true;\n        }\n        return false;\n    }\n\n    //数据model\n    protected _proxy: LoginProxy = new LoginProxy();\n\n    constructor() {\n        EventMgr.on(NetEvent.ServerCheckLogin, this.onServerConneted, this);\n        EventMgr.on(HttpConfig.register.name, this.onRegister, this);\n        EventMgr.on(ServerConfig.account_login, this.onAccountLogin, this);\n        EventMgr.on(ServerConfig.role_enterServer, this.onEnterServer, this);\n        EventMgr.on(ServerConfig.account_reLogin, this.onAccountRelogin, this);\n        EventMgr.on(ServerConfig.role_create, this.onRoleCreate, this);\n        EventMgr.on(ServerConfig.account_logout, this.onAccountLogout, this);\n        EventMgr.on(ServerConfig.account_robLogin, this.onAccountRobLogin, this)\n        EventMgr.on(ServerConfig.chat_login, this.onChatLogin, this)\n\n    }\n\n    public onDestory(): void {\n        EventMgr.targetOff(this);\n    }\n\n    //抢登录\n    private onAccountRobLogin(): void{\n        console.log(\"onAccountRobLogin\")\n        EventMgr.emit(\"robLoginUI\");\n    }\n\n    /**注册回调*/\n    private onRegister(data: any, otherData: any): void {\n        console.log(\"LoginProxy register:\", data, otherData);\n        if (data.code == 0) {\n            this.accountLogin(otherData.username, otherData.password);\n            LocalCache.setLoginValidation(otherData);\n        }\n    }\n\n    /**登录回调*/\n    private onAccountLogin(data: any, otherData:any): void {\n        console.log(\"LoginProxy  login:\", data , otherData);\n        if (data.code == 0) {\n            // this._proxy.loginData = data.msg;\n            this._proxy.saveLoginData(data.msg);\n            LocalCache.setLoginValidation(otherData);\n\n\n            this.role_enterServer(this._proxy.getSession());           \n            EventMgr.emit(\"loginComplete\", data.code);\n        }\n        \n    }\n\n    /**进入服务器回调*/\n    private onEnterServer(data: any,isLoadMap:boolean): void {\n        console.log(\"LoginProxy  enter:\", data,isLoadMap);\n        //没有创建打开创建\n        if (data.code == 9) {\n            EventMgr.emit(\"CreateRole\");\n            DateUtil.setServerTime(data.msg.time);\n        } else {\n            if(data.code == 0){\n                this._proxy.saveEnterData(data.msg);\n                DateUtil.setServerTime(data.msg.time);\n\n                // var roleData = this._proxy.getRoleData();\n                // this.chatLogin(roleData.rid, data.msg.token, roleData.nickName);\n\n                 //进入游戏\n                if(isLoadMap == true){\n                    console.log(\"enterServerComplete\");\n                    MapCommand.getInstance().enterMap();\n                    EventMgr.emit(\"enterServerComplete\");\n                }else{\n                    EventMgr.emit(NetEvent.ServerHandShake);\n                }\n\n            }\n        }\n    }\n\n    /**重连回调*/\n    private onServerConneted(): void {\n        //重新连接成功 重新登录\n        var loginData = this._proxy.getLoginData();\n        var roleData = this._proxy.getRoleData();\n        console.log(\"LoginProxy  conneted:\", loginData,roleData);\n        \n        if (loginData) {\n            this.account_reLogin(loginData.session);\n        }else{\n            EventMgr.emit(NetEvent.ServerHandShake);\n        }\n    }\n\n    /**重新登录回调回调*/\n    private onAccountRelogin(data: any): void {\n        //断线重新登录\n        console.log(\"LoginProxy  relogin:\", data);\n        if(data.code == 0){\n            // EventMgr.emit(NetEvent.ServerHandShake);\n            this.role_enterServer(this._proxy.getSession(),false);\n        }\n    }\n\n    /**创建角色回调*/\n    private onRoleCreate(data: any): void {\n        //重换成功再次调用\n        if (data.code == 0) {\n            this.role_enterServer(this._proxy.getSession());\n        }\n    }\n\n\n    \n    /**登出回调*/\n    private onAccountLogout(data: any): void {\n        //重换成功再次调用\n        if (data.code == 0) {\n            this._proxy.clear();\n            EventMgr.emit(\"enter_login\");\n        }\n    }\n\n\n\n\n    //聊天登录\n    private onChatLogin(data: any): void{\n        console.log(\"onChatLogin:\",data);\n    }\n\n    public get proxy(): LoginProxy {\n        return this._proxy;\n    }\n\n    /**\n     * register\n     * @param data \n     */\n    public register(name: string, password: string) {\n\n        var pwd =  Md5.encrypt(password);\n        var params = \"username=\" + name\n            + \"&password=\" + pwd\n            + \"&hardware=\" + Tools.getUUID();\n\n        console.log(\"register:\", params);\n        var otherData = { username: name, password: password };\n        HttpManager.getInstance().doGet(HttpConfig.register.name, HttpConfig.register.url, params, otherData);\n    }\n\n    /**\n     * login\n     * @param data \n     */\n    public accountLogin(name: string, password: string) {\n        \n        var api_name = ServerConfig.account_login;\n        var pwd =  Md5.encrypt(password);\n\n        var send_data = {\n            name: api_name,\n            msg: {\n                username: name,\n                password: pwd,\n                hardware: Tools.getUUID()\n            }\n        };\n\n        console.log(\"accountLogin:\", send_data);\n        var otherData = { username: name, password: password };\n        NetManager.getInstance().send(send_data,otherData);\n    }\n\n\n    /**\n     * create\n     * @param uid \n     * @param nickName \n     * @param sex \n     * @param sid \n     * @param headId \n     */\n    public role_create(uid: string, nickName: string, sex: number = 0, sid: number = 0, headId: number = 0) {\n        var api_name = ServerConfig.role_create;\n        var send_data = {\n            name: api_name,\n            msg: {\n                uid: uid,\n                nickName: nickName,\n                sex: sex,\n                sid: sid,\n                headId: headId\n            }\n        };\n        NetManager.getInstance().send(send_data);\n    }\n\n\n    public role_enterServer(session: string,isLoadMap:boolean = true) {\n        var api_name = ServerConfig.role_enterServer;\n        var send_data = {\n            name: api_name,\n            msg: {\n                session: session,\n            }\n        };\n        NetManager.getInstance().send(send_data,isLoadMap);\n    }\n\n    /**\n     * 重新登录\n     * @param session \n     */\n    public account_reLogin(session: string) {\n        var api_name = ServerConfig.account_reLogin;\n        var send_data = {\n            name: api_name,\n            msg: {\n                session: session,\n                hardware: Tools.getUUID()\n            }\n        };\n        NetManager.getInstance().send(send_data);\n    }\n\n\n    /**\n     * logout\n     */\n    public account_logout():void{\n        var api_name = ServerConfig.account_logout;\n        var send_data = {\n            name: api_name,\n            msg: {\n\n            }\n        };\n        NetManager.getInstance().send(send_data);\n    }\n\n\n    public chatLogin(rid:number, token: string, nick_name:string = ''):void{\n        var api_name = ServerConfig.chat_login;\n        var send_data = {\n            name: api_name,\n            msg: {\n                rid:rid,\n                token:token,\n                nickName:nick_name\n            }\n        };\n\n        console.log(\"send_data:\", send_data);\n        NetManager.getInstance().send(send_data);\n    }\n}\n"]}