{"version":3,"sources":["file:///D:/git/github/mszlu/games/slg/ms-sg/assets/scripts/map/ui/WarReportLogic.ts"],"names":["_decorator","Component","ScrollView","Prefab","instantiate","MapUICommand","WarReportDesLogic","EventMgr","ListLogic","ccclass","property","WarReportLogic","onLoad","on","initView","openWarPortDes","onDestroy","targetOff","onClickClose","node","active","report","getInstance","proxy","getWarReport","comp","scrollView","getComponent","setData","updateView","qryWarReport","data","console","log","_warPortDesNode","warPortDesPrefab","parent","allRead","warRead"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,W,OAAAA,W;;AAGnDC,MAAAA,Y;;AAEAC,MAAAA,iB;;AACEC,MAAAA,Q,iBAAAA,Q;;AACFC,MAAAA,S;;;;;;;OAND;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;yBASTW,c,WADpBF,OAAO,CAAC,gBAAD,C,UAGHC,QAAQ,CAACR,UAAD,C,UAGRQ,QAAQ,CAACP,MAAD,C,oCANb,MACqBQ,cADrB,SAC4CV,SAD5C,CACsD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,mDAOnB,IAPmB;AAAA;;AASxCW,QAAAA,MAAM,GAAO;AACnB;AAAA;AAAA,oCAASC,EAAT,CAAY,kBAAZ,EAAgC,KAAKC,QAArC,EAA+C,IAA/C;AACA;AAAA;AAAA,oCAASD,EAAT,CAAY,kBAAZ,EAAgC,KAAKE,cAArC,EAAqD,IAArD;AACH;;AAGSC,QAAAA,SAAS,GAAO;AACtB;AAAA;AAAA,oCAASC,SAAT,CAAmB,IAAnB;AACH;;AAESC,QAAAA,YAAY,GAAS;AAC3B,eAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAGSN,QAAAA,QAAQ,GAAO;AACrB,cAAIO,MAAkB,GAAG;AAAA;AAAA,4CAAaC,WAAb,GAA2BC,KAA3B,CAAiCC,YAAjC,EAAzB;AAEA,cAAIC,IAAI,GAAG,KAAKC,UAAL,CAAgBP,IAAhB,CAAqBQ,YAArB;AAAA;AAAA,qCAAX;AACAF,UAAAA,IAAI,CAACG,OAAL,CAAaP,MAAb;AACH;;AAEMQ,QAAAA,UAAU,GAAO;AACpB,eAAKf,QAAL;AACA;AAAA;AAAA,4CAAaQ,WAAb,GAA2BQ,YAA3B;AACH;;AAESf,QAAAA,cAAc,CAACgB,IAAD,EAAqB;AACzCC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,cAAI,KAAKC,eAAL,IAAwB,IAA5B,EAAkC;AAC9B,iBAAKA,eAAL,GAAuB9B,WAAW,CAAC,KAAK+B,gBAAN,CAAlC;AACA,iBAAKD,eAAL,CAAqBE,MAArB,GAA8B,KAAKjB,IAAnC;AACH,WAHD,MAGO;AACH,iBAAKe,eAAL,CAAqBd,MAArB,GAA8B,IAA9B;AACH;;AAED,eAAKc,eAAL,CAAqBP,YAArB;AAAA;AAAA,sDAAqDC,OAArD,CAA6DG,IAA7D;AACH;;AAESM,QAAAA,OAAO,GAAO;AACpB;AAAA;AAAA,4CAAaf,WAAb,GAA2BgB,OAA3B,CAAmC,CAAnC;AACH;;AAlDiD,O;;;;;iBAG1B,I;;;;;;;iBAGG,I","sourcesContent":["// // Learn TypeScript:\n// //  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// // Learn Attribute:\n// //  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// // Learn life-cycle callbacks:\n// //  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { _decorator, Component, ScrollView, Prefab, Node, instantiate } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport MapUICommand from \"./MapUICommand\";\nimport { WarReport } from \"./MapUIProxy\";\nimport WarReportDesLogic from './WarReportDesLogic';\nimport { EventMgr } from '../../utils/EventMgr';\nimport ListLogic from '../../utils/ListLogic';\n\n@ccclass('WarReportLogic')\nexport default class WarReportLogic extends Component {\n\n    @property(ScrollView)\n    scrollView:ScrollView = null;\n\n    @property(Prefab)\n    warPortDesPrefab: Prefab = null;\n    private _warPortDesNode:Node = null;\n\n    protected onLoad():void{\n        EventMgr.on(\"upate_war_report\", this.initView, this);\n        EventMgr.on(\"click_war_report\", this.openWarPortDes, this);\n    }\n\n\n    protected onDestroy():void{\n        EventMgr.targetOff(this);\n    }\n\n    protected onClickClose(): void {\n        this.node.active = false;\n    }\n\n\n    protected initView():void{\n        var report:WarReport[] = MapUICommand.getInstance().proxy.getWarReport();\n        \n        var comp = this.scrollView.node.getComponent(ListLogic);\n        comp.setData(report);\n    }\n\n    public updateView():void{\n        this.initView();\n        MapUICommand.getInstance().qryWarReport();\n    }\n\n    protected openWarPortDes(data:WarReport):void{\n        console.log(\"openWarPortDes\");\n        if (this._warPortDesNode == null) {\n            this._warPortDesNode = instantiate(this.warPortDesPrefab);\n            this._warPortDesNode.parent = this.node;\n        } else {\n            this._warPortDesNode.active = true;\n        }\n\n        this._warPortDesNode.getComponent(WarReportDesLogic).setData(data);\n    }\n\n    protected allRead():void{\n        MapUICommand.getInstance().warRead(0);\n    }\n}\n"]}