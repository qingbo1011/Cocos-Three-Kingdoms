{"version":3,"sources":["file:///D:/git/github/mszlu/games/slg/ms-sg/assets/scripts/map/ui/WarReportItemLogic.ts"],"names":["_decorator","Component","Node","Label","LoginCommand","DateUtil","MapUICommand","EventMgr","GeneralItemLogic","ccclass","property","WarReportItemLogic","onLoad","winNode","active","loseNode","updateItem","data","_curData","isRead","getInstance","proxy","id","readBg","setTeams","ackNode","beg_attack_general","defNode","beg_defense_general","roleData","getRoleData","isMeWin","attack_rid","leftLabel","string","rid","rightLabel","defense_rid","timeLabel","converTimeStr","ctime","result","node","generals","i","length","item","com","getComponent","general","setWarReportData","onClickItem","warRead","console","log","emit"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport LoginCommand from \"../../login/LoginCommand\";\nimport { Role } from \"../../login/LoginProxy\";\nimport DateUtil from \"../../utils/DateUtil\";\nimport MapUICommand from \"./MapUICommand\";\nimport { WarReport } from \"./MapUIProxy\";\nimport { EventMgr } from '../../utils/EventMgr';\nimport GeneralItemLogic from './GeneralItemLogic';\n\n@ccclass('WarReportItemLogic')\nexport default class WarReportItemLogic extends Component {\n\n\n    private _curData:WarReport = null;\n\n    @property(Node)\n    readBg:Node = null;\n\n    @property([Node])\n    ackNode:Node[] = [];\n\n\n    @property([Node])\n    defNode:Node[] = [];\n\n\n    @property(Node)\n    winNode:Node = null;\n\n\n    @property(Node)\n    loseNode:Node = null;\n\n\n    @property(Label)\n    timeLabel: Label = null;\n\n\n    @property(Label)\n    leftLabel: Label = null;\n\n\n    @property(Label)\n    rightLabel: Label = null;\n\n    protected onLoad():void{\n        this.winNode.active = this.loseNode.active = false;\n    }\n\n\n    protected updateItem(data:any):void{\n        this._curData = data;\n\n        var isRead = MapUICommand.getInstance().proxy.isRead(this._curData.id);\n        this.readBg.active = isRead;\n       \n\n        this.setTeams(this.ackNode,this._curData.beg_attack_general);\n        this.setTeams(this.defNode,this._curData.beg_defense_general);\n\n        var roleData:Role = LoginCommand.getInstance().proxy.getRoleData();\n        this.isMeWin(this._curData.attack_rid)\n        \n        this.leftLabel.string = roleData.rid == this._curData.attack_rid?\"我\":\"敌\";\n        this.rightLabel.string = roleData.rid == this._curData.defense_rid?\"我\":\"敌\"\n\n        this.timeLabel.string = DateUtil.converTimeStr(this._curData.ctime);\n    }\n\n\n\n    protected isMeWin(rid:number = 0):void{\n        var roleData:Role = LoginCommand.getInstance().proxy.getRoleData();\n        this.winNode.active = this.loseNode.active = false;\n        \n        if(roleData.rid == rid){\n            if(this._curData.result == 0){\n                this.loseNode.active = true;\n            }else if(this._curData.result == 1){\n\n            }else{\n                this.winNode.active = true;\n            }\n        }else{\n            if(this._curData.result == 0){\n                this.winNode.active = true;\n            }else if(this._curData.result == 1){\n\n            }else{\n                this.loseNode.active = true;\n            }\n        }\n\n    }\n\n\n\n\n\n    protected setTeams(node:Node[],generals:any[]){\n        for(var i = 0; i < node.length ;i++){\n            let item:Node = node[i];\n            let com = item.getComponent(GeneralItemLogic);\n            var general = generals[i];\n            if(general){\n                item.active = true;\n                if(com){\n                    com.setWarReportData(general);\n                }\n\n            }else{\n                item.active = false;\n            }\n\n        }\n    }\n\n    protected onClickItem():void{\n        var isRead = MapUICommand.getInstance().proxy.isRead(this._curData.id);\n        if(!isRead){\n            MapUICommand.getInstance().warRead(this._curData.id);\n        }\n\n        console.log(\"click_war_report:\", this._curData);\n        EventMgr.emit(\"click_war_report\", this._curData);\n       \n    }\n}\n"]}