{"version":3,"sources":["file:///D:/git/github/mszlu/games/slg/ms-sg/assets/scripts/network/http/HttpInvoke.ts"],"names":["HttpInvoke","NetEvent","EventMgr","HttpInvokeType","init","name","_otherData","_name","onComplete","data","json","JSON","parse","responseText","e","console","log","emit","ServerRequestSucess","doSend","url","params","type","self","xhr","XMLHttpRequest","timeout","_receiveTime","onreadystatechange","readyState","status","ontimeout","onerror","GET","open","send","POST","setRequestHeader"],"mappings":"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","sourcesContent":["import { _decorator } from 'cc';\nimport { NetEvent } from \"../socket/NetInterface\";\nimport { EventMgr } from '../../utils/EventMgr';\n\n\nexport enum HttpInvokeType {\n    GET,\n    POST\n}\n\n\nexport class HttpInvoke {\n    \n    protected _receiveTime: number = 15000;               // 多久没收到数据断开\n    protected _name:string = \"\";\n    protected _otherData:any = null;\n\n\n    public init(name:string,_otherData:any = null):void{\n        this._name = name;\n        this._otherData = _otherData;\n    }\n\n\n\n    private onComplete(data:any):void{\n        var json = {};\n        if(data){\n            try {\n                json = JSON.parse(data.responseText);\n            } catch (e) {\n                console.log(\"onComplete--e:\",e)\n            }\n        }\n        EventMgr.emit(this._name, json,this._otherData);\n        EventMgr.emit(NetEvent.ServerRequestSucess,json);\n        \n    }\n\n\n    public doSend(url:string,params:any,type:HttpInvokeType):void{\n        var self = this;\n        let xhr = new XMLHttpRequest();\n        xhr.timeout = this._receiveTime;\n\n\n        console.log(\"doSend:\",url,params,type)\n        \n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n                console.log(\"onreadystatechange:\",xhr.responseText);\n                if (xhr.status >= 200 && xhr.status < 400) {\n                    self.onComplete(xhr);\n                } else {\n                    self.onComplete(null);\n                }\n            }\n\n        };\n        xhr.ontimeout = function () {\n            console.log(\"xhr.ontimeout\");\n            self.onComplete(null);\n        };\n        xhr.onerror = function (e) {\n            console.log(\"xhr.onerror:\", xhr.readyState, xhr.status, e);\n            self.onComplete(null);\n        };\n        \n        \n        if(type == HttpInvokeType.GET){\n            url +=\"?\"+ params;\n            xhr.open(\"GET\",url , true);\n            xhr.send();\n        }else if(type == HttpInvokeType.POST){\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded;\");\n            xhr.send(params);\n        }\n    }\n}\n"]}